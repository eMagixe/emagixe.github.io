{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","done","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","SearchPanel","state","term","onSearchChange","e","target","value","setState","placeholder","onChange","AppHeader","toDo","ItemStatusFilter","buttons","name","filter","onFilterChange","classActive","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","index","getIndex","slice","addItem","text","newItem","toggleProperty","onFilter","console","log","array","findIndex","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","el","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7264a5e5.chunk.js","sourcesContent":["import TodoListItem from \"./todo-list-item\";\n\nexport default TodoListItem;","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\n        let classNames = 'todo-list-item';\n        if(done) classNames += ' done';\n        if(important) classNames += ' important';\n        return (\n            <span className={ classNames }>\n                <span\n                      onClick={ onToggleDone }\n                      className=\"todo-list-item-label\"\n                >\n                    { label }\n                </span>\n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-right\"\n                        onClick={ onToggleImportant }\n                >\n                    <i className=\"fa fa-exclamation\"/>\n                </button>\n                <button type=\"button\"\n                        className=\"btn btn-outline-danger btn-sm float-right\"\n                        onClick={ onDeleted }\n                >\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n            </span>\n        )\n    };\n}\n","import TodoList from \"./todo-list\";\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n    const elements = todos.map((item) => {\n        const { id, ...itemProps } = item;\n        return (\n            <li key = { id }\n                className = \"list-group-item\"\n            >\n                <TodoListItem { ...itemProps }\n                  onDeleted={ () => onDeleted(id) }\n                  onToggleImportant={ () => onToggleImportant(id) }\n                  onToggleDone={ () => onToggleDone(id) }\n                />\n            </li>\n        )\n    });\n\n    return (\n        <ul className = \"list-group todo-list\">\n            { elements }\n        </ul>\n    );\n};\n\nexport default TodoList;\n","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel;","import React, { Component } from 'react'\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (e) => {\n    const term = e.target.value\n    this.setState({ term })\n    this.props.onSearchChange(term)\n  }\n\n  render(){\n    return (\n      <input\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        value={ this.state.term }\n        onChange={ this.onSearchChange }\n      />\n    )\n  }\n}\n","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHearder = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{ toDo } more to do, { done } done</h2>\n        </div>\n    )\n}\n\nexport default AppHearder;","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n      { name: 'all', label: 'All' },\n      { name: 'active', label: 'Active' },\n      { name: 'done', label: 'Done' }\n    ]\n\n    render() {\n\n        const { filter, onFilterChange } = this.props\n        const buttons = this.buttons.map(({name, label}) => {\n          const isActive = filter === name\n          const classActive = isActive ? 'btn-info' : 'btn-outline-secondary'\n          return (\n            <button type=\"button\"\n                    className={`btn ${classActive}`}\n                    onClick={ () => onFilterChange(name) }\n                    key={ name }\n            >\n            { label }</button>\n          )\n        })\n\n        return (\n            <div className=\"btn-group\">\n              { buttons }\n            </div>\n        )\n    }\n};\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n      label: ''\n    };\n\n    onLabelChange = (e) => {\n      this.setState({\n        label: e.target.value\n      })\n    };\n\n    onSubmit = (e) => {\n      e.preventDefault()\n      this.props.onItemAdded(this.state.label)\n      this.setState({\n        label: ''\n      })\n    };\n\n    render() {\n\n        return (\n            <form\n              className=\"item-add-form d-flex\"\n              onSubmit={ this.onSubmit }\n            >\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={ this.onLabelChange }\n                placeholder=\"What needs to be done\"\n                value={ this.state.label }\n              />\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-secondary\"\n              >\n                  Add\n              </button>\n            </form>\n        )\n    };\n}\n","import App from './app';\n\nexport default App;","import React, { Component } from 'react'\nimport TodoList from '../todo-list'\nimport SearchPanel from '../search-panel'\nimport AppHeader from '../app-header'\nimport ItemStatusFilter from '../item-status-filter'\nimport ItemAddForm from '../item-add-form'\nimport './app.css'\n\nexport default class App extends Component {\n\n    maxId = 1\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        term: '',\n        filter: 'all' // active, all, done\n    };\n\n    deleteItem = (id) => {\n        this.setState(({ todoData }) => {\n            const index = this.getIndex(todoData, id)\n            if (index >= 0) return {\n                todoData: [...todoData.slice(0, index), ...todoData.slice(index + 1)]\n            }\n        })\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text)\n        this.setState(({ todoData }) => {\n            return { todoData: [ ...todoData, newItem ] }\n        })\n    }\n\n    onToggleImportant = (id) => {\n      this.setState(({ todoData }) => {\n        return this.toggleProperty(todoData, id, 'important')\n      })\n    }\n\n    onToggleDone = (id) => {\n      this.setState(({ todoData }) => {\n        return this.toggleProperty(todoData, id, 'done')\n      })\n    }\n\n    onSearchChange = (term) => {\n      this.setState({ term })\n    }\n\n    onFilterChange = (filter) => {\n      this.setState({ filter })\n    }\n\n    onFilter = (type) => {\n      console.log(type)\n    }\n\n    getIndex(array, id) {\n      return array.findIndex((item) => item.id === id)\n    }\n\n    createTodoItem(label, done = false, important = false) {\n      return {\n        id: this.maxId++,\n        label,\n        done,\n        important\n      }\n    }\n\n    toggleProperty(array, id, propName) {\n      const index = this.getIndex(array, id)\n      if (index >= 0) {\n        const oldItem = array[index]\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] }\n        return {\n            todoData: [...array.slice(0, index), newItem, ...array.slice(index + 1)]\n        }\n      }\n    }\n\n    search(items, term) {\n      if(term.length === 0) {\n        return items\n      }\n      return items.filter((item) => {\n        return item.label\n          .toLowerCase()\n          .indexOf(term.toLowerCase()) > -1\n      })\n    }\n\n    filter(items, filter) {\n      switch (filter) {\n        case 'all':\n          return items\n        case 'active':\n          return items.filter((item) => !item.done)\n        case 'done':\n          return items.filter((item) => item.done)\n        default:\n          return items\n      }\n    }\n\n    render() {\n        const { todoData, term, filter } = this.state\n        const visibleItems = this.filter(this.search(todoData, term), filter)\n        const doneCount = todoData.filter((el) => el.done).length\n        const todoCount = todoData.length - doneCount\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader  toDo = { todoCount } done = { doneCount }/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                      onSearchChange={ this.onSearchChange }\n                    />\n                    <ItemStatusFilter\n                      filter={ filter }\n                      onFilterChange={ this.onFilterChange }\n                    />\n                </div>\n                <TodoList\n                  todos={ visibleItems }\n                  onDeleted={ this.deleteItem }\n                  onToggleImportant={ this.onToggleImportant }\n                  onToggleDone={ this.onToggleDone }\n                />\n                <ItemAddForm onItemAdded={ this.addItem }/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}